let cols;
let rows;
let current;
let previous;
let rippleshader;

let dampening = 0.99; 
//changed dampening from 0.999 to 0.99

function setup() {
  pixelDensity(1);
  createCanvas(600, 400);
  cols = width;
  rows = height;
  current = new Array(cols).fill(0).map(n => new Array(rows).fill(0));
  previous = new Array(cols).fill(0).map(n => new Array(rows).fill(0));
} 

function mouseDragged() {
  previous[mouseX][mouseY] = 1500;
}

function draw() {
  background(0);

  loadPixels();
  for (let i = 1; i < cols - 1; i++) {
    for (let j = 1; j < rows - 1; j++) {
      current[i][j] =
        (previous[i - 1][j] +
          previous[i + 1][j] + 
          previous[i][j - 1] +
          previous[i][j + 1]) /
          2 -
        current[i][j];
      current[i][j] = current[i][j] * dampening;

      let index = (i + j * cols) * 4;
      pixels[index + 0] = current[i][j];
      pixels[index + 1] = current[i][j];
      pixels[index + 2] = 255;
      pixels[index + 3] = 255;
      //added one more instruction "pixels[index + 3] = 255;" mix colour to get the desired product
      //changed the "current[i][j]" from "pixels[index + 2] = 255;] to "200" to determine background color
    } 
  } 
  
  updatePixels();

  let temp = previous;
  previous = current;
  current = temp;
}
